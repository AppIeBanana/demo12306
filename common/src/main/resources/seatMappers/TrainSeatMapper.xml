<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.next.seatDao.TrainSeatMapper">
  <resultMap id="BaseResultMap" type="com.next.model.TrainSeat">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="ticket" jdbcType="VARCHAR" property="ticket" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="traveller_id" jdbcType="BIGINT" property="travellerId" />
    <result column="train_num_id" jdbcType="INTEGER" property="trainNumId" />
    <result column="carriage_num" jdbcType="INTEGER" property="carriageNum" />
    <result column="row_num" jdbcType="INTEGER" property="rowNum" />
    <result column="seat_num" jdbcType="INTEGER" property="seatNum" />
    <result column="seat_level" jdbcType="INTEGER" property="seatLevel" />
    <result column="train_start" jdbcType="TIMESTAMP" property="trainStart" />
    <result column="train_end" jdbcType="TIMESTAMP" property="trainEnd" />
    <result column="money" jdbcType="INTEGER" property="money" />
    <result column="show_num" jdbcType="VARCHAR" property="showNum" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="from_starion_id" jdbcType="INTEGER" property="fromStarionId" />
    <result column="to_station_id" jdbcType="INTEGER" property="toStationId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, ticket, user_id, traveller_id, train_num_id, carriage_num, row_num, seat_num, 
    seat_level, train_start, train_end, money, show_num, `status`, from_starion_id, to_station_id
  </sql>
  <select id="selectByExample" parameterType="com.next.model.TrainSeatExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from train_seat
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from train_seat
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from train_seat
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.next.model.TrainSeatExample">
    delete from train_seat
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.next.model.TrainSeat">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into train_seat (ticket, user_id, traveller_id, 
      train_num_id, carriage_num, row_num, 
      seat_num, seat_level, train_start, 
      train_end, money, show_num, 
      `status`, from_starion_id, to_station_id
      )
    values (#{ticket,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, #{travellerId,jdbcType=BIGINT}, 
      #{trainNumId,jdbcType=INTEGER}, #{carriageNum,jdbcType=INTEGER}, #{rowNum,jdbcType=INTEGER}, 
      #{seatNum,jdbcType=INTEGER}, #{seatLevel,jdbcType=INTEGER}, #{trainStart,jdbcType=TIMESTAMP}, 
      #{trainEnd,jdbcType=TIMESTAMP}, #{money,jdbcType=INTEGER}, #{showNum,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{fromStarionId,jdbcType=INTEGER}, #{toStationId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.next.model.TrainSeat">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into train_seat
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ticket != null">
        ticket,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="travellerId != null">
        traveller_id,
      </if>
      <if test="trainNumId != null">
        train_num_id,
      </if>
      <if test="carriageNum != null">
        carriage_num,
      </if>
      <if test="rowNum != null">
        row_num,
      </if>
      <if test="seatNum != null">
        seat_num,
      </if>
      <if test="seatLevel != null">
        seat_level,
      </if>
      <if test="trainStart != null">
        train_start,
      </if>
      <if test="trainEnd != null">
        train_end,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="showNum != null">
        show_num,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="fromStarionId != null">
        from_starion_id,
      </if>
      <if test="toStationId != null">
        to_station_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ticket != null">
        #{ticket,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="travellerId != null">
        #{travellerId,jdbcType=BIGINT},
      </if>
      <if test="trainNumId != null">
        #{trainNumId,jdbcType=INTEGER},
      </if>
      <if test="carriageNum != null">
        #{carriageNum,jdbcType=INTEGER},
      </if>
      <if test="rowNum != null">
        #{rowNum,jdbcType=INTEGER},
      </if>
      <if test="seatNum != null">
        #{seatNum,jdbcType=INTEGER},
      </if>
      <if test="seatLevel != null">
        #{seatLevel,jdbcType=INTEGER},
      </if>
      <if test="trainStart != null">
        #{trainStart,jdbcType=TIMESTAMP},
      </if>
      <if test="trainEnd != null">
        #{trainEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="money != null">
        #{money,jdbcType=INTEGER},
      </if>
      <if test="showNum != null">
        #{showNum,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="fromStarionId != null">
        #{fromStarionId,jdbcType=INTEGER},
      </if>
      <if test="toStationId != null">
        #{toStationId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.next.model.TrainSeatExample" resultType="java.lang.Long">
    select count(*) from train_seat
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update train_seat
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=BIGINT},
      </if>
      <if test="row.ticket != null">
        ticket = #{row.ticket,jdbcType=VARCHAR},
      </if>
      <if test="row.userId != null">
        user_id = #{row.userId,jdbcType=BIGINT},
      </if>
      <if test="row.travellerId != null">
        traveller_id = #{row.travellerId,jdbcType=BIGINT},
      </if>
      <if test="row.trainNumId != null">
        train_num_id = #{row.trainNumId,jdbcType=INTEGER},
      </if>
      <if test="row.carriageNum != null">
        carriage_num = #{row.carriageNum,jdbcType=INTEGER},
      </if>
      <if test="row.rowNum != null">
        row_num = #{row.rowNum,jdbcType=INTEGER},
      </if>
      <if test="row.seatNum != null">
        seat_num = #{row.seatNum,jdbcType=INTEGER},
      </if>
      <if test="row.seatLevel != null">
        seat_level = #{row.seatLevel,jdbcType=INTEGER},
      </if>
      <if test="row.trainStart != null">
        train_start = #{row.trainStart,jdbcType=TIMESTAMP},
      </if>
      <if test="row.trainEnd != null">
        train_end = #{row.trainEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="row.money != null">
        money = #{row.money,jdbcType=INTEGER},
      </if>
      <if test="row.showNum != null">
        show_num = #{row.showNum,jdbcType=VARCHAR},
      </if>
      <if test="row.status != null">
        `status` = #{row.status,jdbcType=INTEGER},
      </if>
      <if test="row.fromStarionId != null">
        from_starion_id = #{row.fromStarionId,jdbcType=INTEGER},
      </if>
      <if test="row.toStationId != null">
        to_station_id = #{row.toStationId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update train_seat
    set id = #{row.id,jdbcType=BIGINT},
      ticket = #{row.ticket,jdbcType=VARCHAR},
      user_id = #{row.userId,jdbcType=BIGINT},
      traveller_id = #{row.travellerId,jdbcType=BIGINT},
      train_num_id = #{row.trainNumId,jdbcType=INTEGER},
      carriage_num = #{row.carriageNum,jdbcType=INTEGER},
      row_num = #{row.rowNum,jdbcType=INTEGER},
      seat_num = #{row.seatNum,jdbcType=INTEGER},
      seat_level = #{row.seatLevel,jdbcType=INTEGER},
      train_start = #{row.trainStart,jdbcType=TIMESTAMP},
      train_end = #{row.trainEnd,jdbcType=TIMESTAMP},
      money = #{row.money,jdbcType=INTEGER},
      show_num = #{row.showNum,jdbcType=VARCHAR},
      `status` = #{row.status,jdbcType=INTEGER},
      from_starion_id = #{row.fromStarionId,jdbcType=INTEGER},
      to_station_id = #{row.toStationId,jdbcType=INTEGER}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.next.model.TrainSeat">
    update train_seat
    <set>
      <if test="ticket != null">
        ticket = #{ticket,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="travellerId != null">
        traveller_id = #{travellerId,jdbcType=BIGINT},
      </if>
      <if test="trainNumId != null">
        train_num_id = #{trainNumId,jdbcType=INTEGER},
      </if>
      <if test="carriageNum != null">
        carriage_num = #{carriageNum,jdbcType=INTEGER},
      </if>
      <if test="rowNum != null">
        row_num = #{rowNum,jdbcType=INTEGER},
      </if>
      <if test="seatNum != null">
        seat_num = #{seatNum,jdbcType=INTEGER},
      </if>
      <if test="seatLevel != null">
        seat_level = #{seatLevel,jdbcType=INTEGER},
      </if>
      <if test="trainStart != null">
        train_start = #{trainStart,jdbcType=TIMESTAMP},
      </if>
      <if test="trainEnd != null">
        train_end = #{trainEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=INTEGER},
      </if>
      <if test="showNum != null">
        show_num = #{showNum,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="fromStarionId != null">
        from_starion_id = #{fromStarionId,jdbcType=INTEGER},
      </if>
      <if test="toStationId != null">
        to_station_id = #{toStationId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.next.model.TrainSeat">
    update train_seat
    set ticket = #{ticket,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      traveller_id = #{travellerId,jdbcType=BIGINT},
      train_num_id = #{trainNumId,jdbcType=INTEGER},
      carriage_num = #{carriageNum,jdbcType=INTEGER},
      row_num = #{rowNum,jdbcType=INTEGER},
      seat_num = #{seatNum,jdbcType=INTEGER},
      seat_level = #{seatLevel,jdbcType=INTEGER},
      train_start = #{trainStart,jdbcType=TIMESTAMP},
      train_end = #{trainEnd,jdbcType=TIMESTAMP},
      money = #{money,jdbcType=INTEGER},
      show_num = #{showNum,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER},
      from_starion_id = #{fromStarionId,jdbcType=INTEGER},
      to_station_id = #{toStationId,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>