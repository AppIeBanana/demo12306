<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.next.orderDao.TrainOrderMapper">
  <resultMap id="BaseResultMap" type="com.next.model.TrainOrder">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="parent_order_id" jdbcType="VARCHAR" property="parentOrderId" />
    <result column="ticket" jdbcType="VARCHAR" property="ticket" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="train_num_id" jdbcType="INTEGER" property="trainNumId" />
    <result column="from_station_id" jdbcType="INTEGER" property="fromStationId" />
    <result column="to_station_id" jdbcType="INTEGER" property="toStationId" />
    <result column="train_start" jdbcType="TIMESTAMP" property="trainStart" />
    <result column="train_end" jdbcType="TIMESTAMP" property="trainEnd" />
    <result column="total_money" jdbcType="INTEGER" property="totalMoney" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="expire_time" jdbcType="TIMESTAMP" property="expireTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="refund_status" jdbcType="INTEGER" property="refundStatus" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_id, parent_order_id, ticket, user_id, train_num_id, from_station_id, to_station_id, 
    train_start, train_end, total_money, `status`, create_time, expire_time, update_time, 
    refund_status
  </sql>
  <select id="selectByExample" parameterType="com.next.model.TrainOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from train_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from train_order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from train_order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.next.model.TrainOrderExample">
    delete from train_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.next.model.TrainOrder">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into train_order (order_id, parent_order_id, ticket, 
      user_id, train_num_id, from_station_id, 
      to_station_id, train_start, train_end, 
      total_money, `status`, create_time, 
      expire_time, update_time, refund_status
      )
    values (#{orderId,jdbcType=VARCHAR}, #{parentOrderId,jdbcType=VARCHAR}, #{ticket,jdbcType=VARCHAR}, 
      #{userId,jdbcType=BIGINT}, #{trainNumId,jdbcType=INTEGER}, #{fromStationId,jdbcType=INTEGER}, 
      #{toStationId,jdbcType=INTEGER}, #{trainStart,jdbcType=TIMESTAMP}, #{trainEnd,jdbcType=TIMESTAMP}, 
      #{totalMoney,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{expireTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{refundStatus,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.next.model.TrainOrder">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into train_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="parentOrderId != null">
        parent_order_id,
      </if>
      <if test="ticket != null">
        ticket,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="trainNumId != null">
        train_num_id,
      </if>
      <if test="fromStationId != null">
        from_station_id,
      </if>
      <if test="toStationId != null">
        to_station_id,
      </if>
      <if test="trainStart != null">
        train_start,
      </if>
      <if test="trainEnd != null">
        train_end,
      </if>
      <if test="totalMoney != null">
        total_money,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="expireTime != null">
        expire_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="refundStatus != null">
        refund_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="parentOrderId != null">
        #{parentOrderId,jdbcType=VARCHAR},
      </if>
      <if test="ticket != null">
        #{ticket,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="trainNumId != null">
        #{trainNumId,jdbcType=INTEGER},
      </if>
      <if test="fromStationId != null">
        #{fromStationId,jdbcType=INTEGER},
      </if>
      <if test="toStationId != null">
        #{toStationId,jdbcType=INTEGER},
      </if>
      <if test="trainStart != null">
        #{trainStart,jdbcType=TIMESTAMP},
      </if>
      <if test="trainEnd != null">
        #{trainEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="totalMoney != null">
        #{totalMoney,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expireTime != null">
        #{expireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="refundStatus != null">
        #{refundStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.next.model.TrainOrderExample" resultType="java.lang.Long">
    select count(*) from train_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update train_order
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=BIGINT},
      </if>
      <if test="row.orderId != null">
        order_id = #{row.orderId,jdbcType=VARCHAR},
      </if>
      <if test="row.parentOrderId != null">
        parent_order_id = #{row.parentOrderId,jdbcType=VARCHAR},
      </if>
      <if test="row.ticket != null">
        ticket = #{row.ticket,jdbcType=VARCHAR},
      </if>
      <if test="row.userId != null">
        user_id = #{row.userId,jdbcType=BIGINT},
      </if>
      <if test="row.trainNumId != null">
        train_num_id = #{row.trainNumId,jdbcType=INTEGER},
      </if>
      <if test="row.fromStationId != null">
        from_station_id = #{row.fromStationId,jdbcType=INTEGER},
      </if>
      <if test="row.toStationId != null">
        to_station_id = #{row.toStationId,jdbcType=INTEGER},
      </if>
      <if test="row.trainStart != null">
        train_start = #{row.trainStart,jdbcType=TIMESTAMP},
      </if>
      <if test="row.trainEnd != null">
        train_end = #{row.trainEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="row.totalMoney != null">
        total_money = #{row.totalMoney,jdbcType=INTEGER},
      </if>
      <if test="row.status != null">
        `status` = #{row.status,jdbcType=INTEGER},
      </if>
      <if test="row.createTime != null">
        create_time = #{row.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.expireTime != null">
        expire_time = #{row.expireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.updateTime != null">
        update_time = #{row.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.refundStatus != null">
        refund_status = #{row.refundStatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update train_order
    set id = #{row.id,jdbcType=BIGINT},
      order_id = #{row.orderId,jdbcType=VARCHAR},
      parent_order_id = #{row.parentOrderId,jdbcType=VARCHAR},
      ticket = #{row.ticket,jdbcType=VARCHAR},
      user_id = #{row.userId,jdbcType=BIGINT},
      train_num_id = #{row.trainNumId,jdbcType=INTEGER},
      from_station_id = #{row.fromStationId,jdbcType=INTEGER},
      to_station_id = #{row.toStationId,jdbcType=INTEGER},
      train_start = #{row.trainStart,jdbcType=TIMESTAMP},
      train_end = #{row.trainEnd,jdbcType=TIMESTAMP},
      total_money = #{row.totalMoney,jdbcType=INTEGER},
      `status` = #{row.status,jdbcType=INTEGER},
      create_time = #{row.createTime,jdbcType=TIMESTAMP},
      expire_time = #{row.expireTime,jdbcType=TIMESTAMP},
      update_time = #{row.updateTime,jdbcType=TIMESTAMP},
      refund_status = #{row.refundStatus,jdbcType=INTEGER}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.next.model.TrainOrder">
    update train_order
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="parentOrderId != null">
        parent_order_id = #{parentOrderId,jdbcType=VARCHAR},
      </if>
      <if test="ticket != null">
        ticket = #{ticket,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="trainNumId != null">
        train_num_id = #{trainNumId,jdbcType=INTEGER},
      </if>
      <if test="fromStationId != null">
        from_station_id = #{fromStationId,jdbcType=INTEGER},
      </if>
      <if test="toStationId != null">
        to_station_id = #{toStationId,jdbcType=INTEGER},
      </if>
      <if test="trainStart != null">
        train_start = #{trainStart,jdbcType=TIMESTAMP},
      </if>
      <if test="trainEnd != null">
        train_end = #{trainEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="totalMoney != null">
        total_money = #{totalMoney,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expireTime != null">
        expire_time = #{expireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="refundStatus != null">
        refund_status = #{refundStatus,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.next.model.TrainOrder">
    update train_order
    set order_id = #{orderId,jdbcType=VARCHAR},
      parent_order_id = #{parentOrderId,jdbcType=VARCHAR},
      ticket = #{ticket,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      train_num_id = #{trainNumId,jdbcType=INTEGER},
      from_station_id = #{fromStationId,jdbcType=INTEGER},
      to_station_id = #{toStationId,jdbcType=INTEGER},
      train_start = #{trainStart,jdbcType=TIMESTAMP},
      train_end = #{trainEnd,jdbcType=TIMESTAMP},
      total_money = #{totalMoney,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      expire_time = #{expireTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      refund_status = #{refundStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>